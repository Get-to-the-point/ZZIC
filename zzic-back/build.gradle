plugins {
    // Java 프로젝트를 빌드하기 위한 플러그인
    // Gradle이 Java 소스 코드 컴파일, 테스트, JAR 생성과 같은 작업을 자동으로 처리하도록 설정
    id 'java'

    // Spring Boot 애플리케이션을 설정하고 실행 가능하게 만드는 플러그인
    // 실행 가능한 JAR 파일 생성, 애플리케이션 실행, Spring Boot 특화 작업 지원
    id 'org.springframework.boot' version '3.4.1'

    // Spring 재단에서 관리하는 Maven BOM을 사용해 의존성 버전 충돌을 방지
    // 의존성 버전을 생략하면 Spring BOM에 정의된 호환 가능한 버전을 자동 참조
    // BOM에 없는 의존성은 직접 버전을 명시해야 함
    id 'io.spring.dependency-management' version '1.1.7'
}

group = 'point' // 프로젝트의 그룹 ID를 지정. 주로 조직명이나 패키지 구조를 따름
version = '0.0.1-SNAPSHOT' // 현재 프로젝트의 버전. SNAPSHOT은 개발 중 버전을 의미하며 정식 릴리스는 없음

java {
    toolchain {
        // 프로젝트에서 사용할 Java 버전 설정
        // 여기서는 Java 21을 사용하도록 지정
        languageVersion = JavaLanguageVersion.of(21)
    }
}

repositories {
    // 의존성을 다운로드할 Maven 중앙 저장소를 지정
    // Maven Central은 https://repo.maven.apache.org/maven2/에 위치하며 Gradle에 기본 설정되어 있음
    mavenCentral()
    // 커스텀 저장소를 추가할 수 있음 (예: 내부 사설 저장소, Spring의 특정 저장소 등)
    // maven { url 'https://repo.spring.io/milestone' }
}

dependencies {
    // ===== Core Dependencies =====
    // Spring Web을 위한 의존성
    implementation 'org.springframework.boot:spring-boot-starter-web'

    // Bean Validation (Hibernate Validator)
    implementation 'org.hibernate.validator:hibernate-validator:8.0.1.Final'

    // MyBatis를 사용하여 SQL 매핑 및 데이터베이스 작업 지원
    implementation 'org.mybatis.spring.boot:mybatis-spring-boot-starter:3.0.4'
    implementation 'org.springframework.boot:spring-boot-starter-thymeleaf'

    // Lombok (컴파일 타임 의존성)
    compileOnly 'org.projectlombok:lombok'
    annotationProcessor 'org.projectlombok:lombok'

    // MySQL 데이터베이스 드라이버
    runtimeOnly 'com.mysql:mysql-connector-j'

    // Flyway Migration Tool
    implementation 'org.flywaydb:flyway-core'
    implementation 'org.flywaydb:flyway-mysql'

    // ===== API Documentation =====
    // OpenAPI 문서화를 위한 SpringDoc 의존성
    implementation 'org.springdoc:springdoc-openapi-starter-webmvc-ui:2.3.0'

    // ===== Testing Dependencies =====
    // Spring Boot의 테스트 라이브러리 (JUnit, Mockito 포함)
    testImplementation 'org.springframework.boot:spring-boot-starter-test'

    // AssertJ - 가독성 높은 테스트 코드 작성을 지원
    testImplementation 'org.assertj:assertj-core:3.26.3'

    // MyBatis 통합 테스트를 지원
    testImplementation 'org.mybatis.spring.boot:mybatis-spring-boot-starter-test:3.0.4'

    // JUnit 5 플랫폼 실행기
    testRuntimeOnly 'org.junit.platform:junit-platform-launcher'
}

tasks.named('test') {
    useJUnitPlatform()
}